"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var jsx_runtime_1 = require("react/jsx-runtime");
var MetricCard = function (_a) {
    var title = _a.title, value = _a.value, icon = _a.icon, _b = _a.suffix, suffix = _b === void 0 ? '' : _b, description = _a.description, trend = _a.trend, _c = _a.trendColor, trendColor = _c === void 0 ? trend === 'up' ? 'text-green-600' : trend === 'down' ? 'text-red-600' : 'text-gray-600' : _c;
    return ((0, jsx_runtime_1.jsx)("div", { className: "bg-white rounded-lg shadow-md p-6 transition-all duration-300 hover:shadow-lg", children: (0, jsx_runtime_1.jsxs)("div", { className: "flex justify-between items-start", children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("h3", { className: "text-lg font-medium text-gray-700", children: title }), (0, jsx_runtime_1.jsxs)("div", { className: "flex items-baseline mt-2", children: [(0, jsx_runtime_1.jsx)("span", { className: "text-3xl font-bold text-gray-900", children: value }), suffix && (0, jsx_runtime_1.jsx)("span", { className: "ml-1 text-xl text-gray-500", children: suffix }), trend && ((0, jsx_runtime_1.jsx)("span", { className: "ml-3 flex items-center ".concat(trendColor), children: trend === 'up' ? ((0, jsx_runtime_1.jsx)("svg", { className: "w-4 h-4 mr-1", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24", xmlns: "http://www.w3.org/2000/svg", children: (0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M5 15l7-7 7 7" }) })) : trend === 'down' ? ((0, jsx_runtime_1.jsx)("svg", { className: "w-4 h-4 mr-1", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24", xmlns: "http://www.w3.org/2000/svg", children: (0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M19 9l-7 7-7-7" }) })) : null }))] }), (0, jsx_runtime_1.jsx)("p", { className: "mt-2 text-sm text-gray-600", children: description })] }), (0, jsx_runtime_1.jsx)("div", { className: "p-3 bg-gray-100 rounded-full", children: icon })] }) }));
};
exports.default = MetricCard;
